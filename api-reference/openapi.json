{"swagger": "2.0", "info": {"title": "Xenovia API", "description": "API documentation for Xenovia project", "termsOfService": "https://www.xenovia.ai/terms/", "contact": {"email": "contact@xenovia.ai"}, "license": {"name": "MIT License"}, "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/api/v1", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/admin/audit-logs": {"get": {"operationId": "admin_audit-logs_list", "description": "API endpoint for retrieving system audit logs.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "parameters": []}, "/admin/audit-logs/{log_id}": {"get": {"operationId": "admin_audit-logs_read", "description": "API endpoint for retrieving a specific audit log.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "parameters": [{"name": "log_id", "in": "path", "required": true, "type": "string"}]}, "/admin/maintenance": {"get": {"operationId": "admin_maintenance_list", "description": "API endpoint for managing system maintenance mode.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "post": {"operationId": "admin_maintenance_create", "description": "API endpoint for managing system maintenance mode.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["admin"]}, "parameters": []}, "/admin/settings": {"get": {"operationId": "admin_settings_list", "description": "API endpoint for managing global system settings.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "post": {"operationId": "admin_settings_create", "description": "API endpoint for managing global system settings.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["admin"]}, "parameters": []}, "/admin/settings/{setting_key}": {"get": {"operationId": "admin_settings_read", "description": "API endpoint for managing a specific global system setting.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "put": {"operationId": "admin_settings_update", "description": "API endpoint for managing a specific global system setting.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "delete": {"operationId": "admin_settings_delete", "description": "API endpoint for managing a specific global system setting.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["admin"]}, "parameters": [{"name": "setting_key", "in": "path", "required": true, "type": "string"}]}, "/admin/stats": {"get": {"operationId": "admin_stats_list", "description": "API endpoint for retrieving system statistics.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "parameters": []}, "/admin/users": {"get": {"operationId": "admin_users_list", "description": "API endpoint for admin user management.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "post": {"operationId": "admin_users_create", "description": "API endpoint for admin user management.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["admin"]}, "parameters": []}, "/admin/users/{user_id}": {"get": {"operationId": "admin_users_read", "description": "API endpoint for admin user detail operations.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "put": {"operationId": "admin_users_update", "description": "API endpoint for admin user detail operations.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["admin"]}, "delete": {"operationId": "admin_users_delete", "description": "API endpoint for admin user detail operations.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["admin"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/": {"get": {"operationId": "agents_agents_list", "description": "List all agents for the current user or for a specific project.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_agents_create", "description": "Create a new agent.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/agents/{agent_id}/": {"get": {"operationId": "agents_agents_read", "description": "Retrieve details of a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_agents_update", "description": "Update a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_agents_delete", "description": "Delete a specific agent.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/config/": {"get": {"operationId": "agents_agents_config_list", "description": "Retrieve an agent's configuration.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_agents_config_update", "description": "Update an agent's configuration.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/files/": {"get": {"operationId": "agents_agents_files_list", "description": "Get the contents of a file in the agent's workspace.", "parameters": [], "responses": {"200": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["agents"]}, "post": {"operationId": "agents_agents_files_create", "description": "Upload a file to the agent's workspace.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["agents"]}, "put": {"operationId": "agents_agents_files_update", "description": "Update a file in the agent's workspace.", "parameters": [], "responses": {"200": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/logs/": {"get": {"operationId": "agents_agents_logs_list", "description": "Retrieve logs for a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/memory/": {"get": {"operationId": "agents_agents_memory_list", "description": "List memory items for a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_agents_memory_create", "description": "Add a memory item to an agent's memory.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_agents_memory_delete", "description": "Delete memory items for an agent.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/memory/export/": {"get": {"operationId": "agents_agents_memory_export_list", "description": "Export an agent's memory.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/memory/search/": {"post": {"operationId": "agents_agents_memory_search_create", "description": "Search an agent's memory.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/run/": {"post": {"operationId": "agents_agents_run_create", "description": "Run an agent with a message.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/runner/": {"post": {"operationId": "agents_agents_runner_create", "description": "Execute code in an agent's workspace.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/stats/": {"get": {"operationId": "agents_agents_stats_list", "description": "Retrieve statistics for a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/status/": {"get": {"operationId": "agents_agents_status_list", "description": "Retrieve an agent's status.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_agents_status_update", "description": "Update an agent's status.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/agents/{agent_id}/workspace/": {"get": {"operationId": "agents_agents_workspace_list", "description": "Get an agent's workspace contents.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_agents_workspace_create", "description": "Create a new directory in the agent's workspace.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_agents_workspace_delete", "description": "Delete a file or directory from the agent's workspace.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/analytics/agents/{agent_id}/": {"get": {"operationId": "agents_analytics_agents_read", "description": "Get analytics data for a specific agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/analytics/cost/": {"get": {"operationId": "agents_analytics_cost_list", "description": "Get cost analytics data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/analytics/performance/": {"get": {"operationId": "agents_analytics_performance_list", "description": "Get system performance analytics data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/analytics/projects/{project_id}/": {"get": {"operationId": "agents_analytics_projects_read", "description": "Get analytics data for a specific project.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/agents/analytics/usage/": {"get": {"operationId": "agents_analytics_usage_list", "description": "Get system-wide usage analytics data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/analytics/users/{user_id}/": {"get": {"operationId": "agents_analytics_users_read", "description": "Get analytics data for a specific user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/agents/collaboration/messages/{message_id}/": {"get": {"operationId": "agents_collaboration_messages_read", "description": "Get a specific message from a collaboration session", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_collaboration_messages_update", "description": "Update a specific message in a collaboration session", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_collaboration_messages_delete", "description": "Delete a specific message from a collaboration session", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "message_id", "in": "path", "required": true, "type": "string"}]}, "/agents/collaboration/sessions/": {"get": {"operationId": "agents_collaboration_sessions_list", "description": "List collaboration sessions with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_collaboration_sessions_create", "description": "Create a new collaboration session", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/collaboration/sessions/{session_id}/": {"get": {"operationId": "agents_collaboration_sessions_read", "description": "List all messages in a collaboration session", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_collaboration_sessions_create", "description": "Add a message to a collaboration session", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_collaboration_sessions_update", "description": "Update a specific collaboration session", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_collaboration_sessions_delete", "description": "Delete a specific collaboration session", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "session_id", "in": "path", "required": true, "type": "string"}]}, "/agents/collaboration/sessions/{session_id}/messages/": {"get": {"operationId": "agents_collaboration_sessions_messages_list", "description": "List messages from a specific sender in a collaboration session", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_collaboration_sessions_messages_create", "description": "Perform an action on all messages from a sender in a session", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "session_id", "in": "path", "required": true, "type": "string"}]}, "/agents/conversations/": {"get": {"operationId": "agents_conversations_list", "description": "List all conversations with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_conversations_create", "description": "Start a new conversation with an agent", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/conversations/{conversation_id}/": {"get": {"operationId": "agents_conversations_read", "description": "Get details of a specific conversation", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_conversations_update", "description": "Update a specific conversation", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_conversations_delete", "description": "Delete a specific conversation", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "conversation_id", "in": "path", "required": true, "type": "string"}]}, "/agents/conversations/{conversation_id}/messages/": {"get": {"operationId": "agents_conversations_messages_list", "description": "Get a specific message from a conversation", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_conversations_messages_update", "description": "Update a message in a conversation (e.g., for feedback)", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_conversations_messages_delete", "description": "Delete a message from a conversation", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "conversation_id", "in": "path", "required": true, "type": "string"}]}, "/agents/deployments/": {"get": {"operationId": "agents_deployments_list", "description": "List all deployments with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_deployments_create", "description": "Create a new deployment", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/deployments/{deployment_id}/": {"get": {"operationId": "agents_deployments_read", "description": "Get a specific deployment", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_deployments_update", "description": "Update a deployment", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_deployments_delete", "description": "Delete a deployment", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "deployment_id", "in": "path", "required": true, "type": "string"}]}, "/agents/deployments/{deployment_id}/logs/": {"get": {"operationId": "agents_deployments_logs_list", "description": "Get logs for a specific deployment", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "deployment_id", "in": "path", "required": true, "type": "string"}]}, "/agents/executions/": {"get": {"operationId": "agents_executions_list", "description": "List agent executions with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_executions_create", "description": "Create a new execution for an agent.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/executions/{execution_id}/": {"get": {"operationId": "agents_executions_read", "description": "Retrieve details of a specific execution.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_executions_delete", "description": "Cancel a running execution.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "execution_id", "in": "path", "required": true, "type": "string"}]}, "/agents/fine-tuning/datasets/": {"get": {"operationId": "agents_fine-tuning_datasets_list", "description": "List all fine-tuning datasets with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["agents"]}, "post": {"operationId": "agents_fine-tuning_datasets_create", "description": "Create a new fine-tuning dataset.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["agents"]}, "parameters": []}, "/agents/fine-tuning/datasets/{dataset_id}/": {"get": {"operationId": "agents_fine-tuning_datasets_read", "description": "Retrieve details of a specific fine-tuning dataset.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_fine-tuning_datasets_update", "description": "Update a fine-tuning dataset.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_fine-tuning_datasets_delete", "description": "Delete a fine-tuning dataset.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "dataset_id", "in": "path", "required": true, "type": "string"}]}, "/agents/fine-tuning/jobs/": {"get": {"operationId": "agents_fine-tuning_jobs_list", "description": "List all fine-tuning jobs with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_fine-tuning_jobs_create", "description": "Create a new fine-tuning job.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/fine-tuning/jobs/{job_id}/": {"get": {"operationId": "agents_fine-tuning_jobs_read", "description": "Retrieve details of a specific fine-tuning job.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string"}]}, "/agents/fine-tuning/jobs/{job_id}/cancel/": {"post": {"operationId": "agents_fine-tuning_jobs_cancel_create", "description": "Cancel a fine-tuning job in progress.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string"}]}, "/agents/fine-tuning/models/": {"get": {"operationId": "agents_fine-tuning_models_list", "description": "List all fine-tuned models with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_fine-tuning_models_create", "description": "Create a new fine-tuned model by starting a fine-tuning job.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/fine-tuning/models/{model_id}/": {"get": {"operationId": "agents_fine-tuning_models_read", "description": "Retrieve details of a specific fine-tuned model.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_fine-tuning_models_update", "description": "Update a fine-tuned model.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_fine-tuning_models_delete", "description": "Delete a fine-tuned model.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "model_id", "in": "path", "required": true, "type": "string"}]}, "/agents/integrations/": {"get": {"operationId": "agents_integrations_list", "description": "List available integrations with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_integrations_create", "description": "Create a custom integration", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/integrations/{integration_id}/": {"get": {"operationId": "agents_integrations_read", "description": "Get details of a specific integration", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_integrations_update", "description": "Update a specific integration", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_integrations_delete", "description": "Delete a specific integration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "integration_id", "in": "path", "required": true, "type": "string"}]}, "/agents/integrations/{integration_id}/auth/": {"get": {"operationId": "agents_integrations_auth_list", "description": "Get authentication information for an integration", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_integrations_auth_create", "description": "Initiate or update authentication for an integration", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_integrations_auth_update", "description": "Complete OAuth authentication flow", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_integrations_auth_delete", "description": "Remove authentication for an integration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "integration_id", "in": "path", "required": true, "type": "string"}]}, "/agents/knowledgebases/": {"get": {"operationId": "agents_knowledgebases_list", "description": "List all knowledge bases with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_knowledgebases_create", "description": "Create a new knowledge base", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/knowledgebases/{kb_id}/": {"get": {"operationId": "agents_knowledgebases_read", "description": "Retrieve a specific knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_knowledgebases_update", "description": "Update a knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_knowledgebases_delete", "description": "Delete a knowledge base", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/agents/knowledgebases/{kb_id}/documents/": {"get": {"operationId": "agents_knowledgebases_documents_list", "description": "List documents in a knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_knowledgebases_documents_create", "description": "Add a document to a knowledge base", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/agents/knowledgebases/{kb_id}/documents/{doc_id}/": {"get": {"operationId": "agents_knowledgebases_documents_read", "description": "Retrieve a specific document", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_knowledgebases_documents_update", "description": "Update a document", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_knowledgebases_documents_delete", "description": "Delete a document", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}, {"name": "doc_id", "in": "path", "required": true, "type": "string"}]}, "/agents/knowledgebases/{kb_id}/search/": {"post": {"operationId": "agents_knowledgebases_search_create", "description": "Search a knowledge base", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/agents/marketplace/": {"get": {"operationId": "agents_marketplace_list", "description": "Search for agents in the marketplace.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/marketplace/categories/": {"get": {"operationId": "agents_marketplace_categories_list", "description": "Get all marketplace categories.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/marketplace/{agent_id}/": {"get": {"operationId": "agents_marketplace_read", "description": "Get details of a specific marketplace agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_marketplace_create", "description": "Install a marketplace agent into a project.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/agents/memory/collections/": {"get": {"operationId": "agents_memory_collections_list", "description": "List memory collections for a user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_memory_collections_create", "description": "Create a new memory collection.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/alerts/": {"get": {"operationId": "agents_monitoring_alerts_list", "description": "List system alerts with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_monitoring_alerts_create", "description": "Create a new system alert.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/alerts/{alert_id}/": {"get": {"operationId": "agents_monitoring_alerts_read", "description": "Retrieve details of a specific alert.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_monitoring_alerts_update", "description": "Update an alert.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_monitoring_alerts_delete", "description": "Delete an alert.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "alert_id", "in": "path", "required": true, "type": "string"}]}, "/agents/monitoring/dashboard/": {"get": {"operationId": "agents_monitoring_dashboard_list", "description": "Get monitoring dashboard data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/discovery/": {"get": {"operationId": "agents_monitoring_discovery_list", "description": "Discover available services in the system.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/health/": {"get": {"operationId": "agents_monitoring_health_list", "description": "Get the overall health status of the system.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/logs/": {"get": {"operationId": "agents_monitoring_logs_list", "description": "Get system logs with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/metrics/": {"get": {"operationId": "agents_monitoring_metrics_list", "description": "Get system metrics with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/monitoring/services/health/": {"get": {"operationId": "agents_monitoring_services_health_list", "description": "Get health information for individual services.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/notifications/": {"get": {"operationId": "agents_notifications_list", "description": "Get notifications for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_notifications_update", "description": "Mark all notifications as read for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/notifications/settings/": {"get": {"operationId": "agents_notifications_settings_list", "description": "Get notification preferences for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_notifications_settings_update", "description": "Update notification preferences for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/notifications/{notification_id}/": {"get": {"operationId": "agents_notifications_read", "description": "Get details for a specific notification", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_notifications_update", "description": "Mark a specific notification as read", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_notifications_delete", "description": "Delete a specific notification", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "notification_id", "in": "path", "required": true, "type": "string"}]}, "/agents/projects/{project_id}/notifications/": {"get": {"operationId": "agents_projects_notifications_list", "description": "Get notifications related to a specific project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_projects_notifications_create", "description": "Create a notification for a project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/agents/security/policies/": {"get": {"operationId": "agents_security_policies_list", "description": "API endpoint for managing security policies", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_security_policies_create", "description": "API endpoint for managing security policies", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/security/rules/": {"get": {"operationId": "agents_security_rules_list", "description": "List all security rules", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_security_rules_create", "description": "Create a new security rule", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/security/rules/{rule_id}/": {"get": {"operationId": "agents_security_rules_read", "description": "API endpoint for retrieving, updating and deleting a security rule", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_security_rules_update", "description": "API endpoint for retrieving, updating and deleting a security rule", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_security_rules_delete", "description": "API endpoint for retrieving, updating and deleting a security rule", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "rule_id", "in": "path", "required": true, "type": "string"}]}, "/agents/security/scans/": {"get": {"operationId": "agents_security_scans_list", "description": "API endpoint for performing and listing security scans", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_security_scans_create", "description": "API endpoint for performing and listing security scans", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/security/scans/{scan_id}/": {"get": {"operationId": "agents_security_scans_read", "description": "API endpoint for retrieving and managing a specific security scan", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_security_scans_delete", "description": "API endpoint for retrieving and managing a specific security scan", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "scan_id", "in": "path", "required": true, "type": "string"}]}, "/agents/settings/apikeys/": {"get": {"operationId": "agents_settings_apikeys_list", "description": "List all API keys for the current user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_settings_apikeys_create", "description": "Create a new API key.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/settings/apikeys/{key_id}/": {"get": {"operationId": "agents_settings_apikeys_read", "description": "Get details of a specific API key.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_settings_apikeys_update", "description": "Update an API key.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_settings_apikeys_delete", "description": "Delete an API key.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "key_id", "in": "path", "required": true, "type": "string"}]}, "/agents/settings/keys/": {"get": {"operationId": "agents_settings_keys_list", "description": "List available settings keys and their metadata.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/settings/organization/": {"get": {"operationId": "agents_settings_organization_list", "description": "Get organization settings.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_settings_organization_update", "description": "Update organization settings.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/settings/user/": {"get": {"operationId": "agents_settings_user_list", "description": "Get settings for the current user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_settings_user_update", "description": "Update settings for the current user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/system/notifications/": {"post": {"operationId": "agents_system_notifications_create", "description": "Create a system-wide notification (admin only)", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/teams/": {"get": {"operationId": "agents_teams_list", "description": "Get teams for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_teams_create", "description": "Create a new team", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/teams/{team_id}/": {"get": {"operationId": "agents_teams_read", "description": "Get details for a specific team", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_teams_update", "description": "Update a team", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_teams_delete", "description": "Delete a team", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "team_id", "in": "path", "required": true, "type": "string"}]}, "/agents/teams/{team_id}/members/": {"get": {"operationId": "agents_teams_members_list", "description": "List all members of a team", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_teams_members_create", "description": "Add a member to a team", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_teams_members_delete", "description": "Remove a member from a team", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "team_id", "in": "path", "required": true, "type": "string"}]}, "/agents/teams/{team_id}/members/{user_id}/": {"put": {"operationId": "agents_teams_members_update", "description": "Update a team member's role", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_teams_members_delete", "description": "Remove a member from a team", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "team_id", "in": "path", "required": true, "type": "string"}, {"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/agents/teams/{team_id}/projects/": {"get": {"operationId": "agents_teams_projects_list", "description": "Get projects for a specific team", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_teams_projects_create", "description": "Add a project to a team", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "team_id", "in": "path", "required": true, "type": "string"}]}, "/agents/teams/{team_id}/projects/{project_id}/": {"delete": {"operationId": "agents_teams_projects_delete", "description": "Remove a project from a team", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "team_id", "in": "path", "required": true, "type": "string"}, {"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/agents/tests/cases/": {"get": {"operationId": "agents_tests_cases_list", "description": "List test cases with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_tests_cases_create", "description": "Create a new test case.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/tests/cases/{case_id}/": {"get": {"operationId": "agents_tests_cases_read", "description": "Get details of a specific test case.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_tests_cases_update", "description": "Update a test case.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_tests_cases_delete", "description": "Delete a test case.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "case_id", "in": "path", "required": true, "type": "string"}]}, "/agents/tests/evaluate/": {"post": {"operationId": "agents_tests_evaluate_create", "description": "Evaluate an agent against a test case or custom input.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/tests/runs/": {"get": {"operationId": "agents_tests_runs_list", "description": "List test runs with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_tests_runs_create", "description": "Create a new test run and start execution.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/tests/runs/{run_id}/": {"get": {"operationId": "agents_tests_runs_read", "description": "Get details of a specific test run.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_tests_runs_delete", "description": "Delete a test run.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "run_id", "in": "path", "required": true, "type": "string"}]}, "/agents/tests/suites/": {"get": {"operationId": "agents_tests_suites_list", "description": "List test suites with optional filtering.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_tests_suites_create", "description": "Create a new test suite.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/tests/suites/{suite_id}/": {"get": {"operationId": "agents_tests_suites_read", "description": "Get details of a specific test suite.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_tests_suites_update", "description": "Update a test suite.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_tests_suites_delete", "description": "Delete a test suite.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "suite_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhook-endpoints/": {"get": {"operationId": "agents_webhook-endpoints_list", "description": "List all webhook endpoints for a project.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_webhook-endpoints_create", "description": "Create a new webhook endpoint.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/webhook-endpoints/{endpoint_id}/": {"get": {"operationId": "agents_webhook-endpoints_read", "description": "Get a webhook endpoint by ID.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_webhook-endpoints_update", "description": "Update a webhook endpoint.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_webhook-endpoints_delete", "description": "Delete a webhook endpoint.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "endpoint_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhook-endpoints/{endpoint_id}/events/": {"get": {"operationId": "agents_webhook-endpoints_events_list", "description": "List events for a webhook endpoint.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "endpoint_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhook-event-types": {"get": {"operationId": "agents_webhook-event-types_list", "description": "Get all available webhook event types.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/webhook-events/{event_id}/": {"get": {"operationId": "agents_webhook-events_read", "description": "Get a webhook event by ID.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_webhook-events_create", "description": "Retry a failed webhook event.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhooks/": {"get": {"operationId": "agents_webhooks_list", "description": "List all webhooks for a project.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_webhooks_create", "description": "Create a new webhook.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/webhooks/{webhook_id}/": {"get": {"operationId": "agents_webhooks_read", "description": "Get a webhook by ID.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_webhooks_update", "description": "Update a webhook.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_webhooks_delete", "description": "Delete a webhook.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhooks/{webhook_id}/logs/": {"get": {"operationId": "agents_webhooks_logs_list", "description": "List logs for a webhook.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}, "/agents/webhooks/{webhook_id}/test/": {"post": {"operationId": "agents_webhooks_test_create", "description": "Test a webhook by sending a test event.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}, "/agents/workflows/": {"get": {"operationId": "agents_workflows_list", "description": "List all workflows", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_workflows_create", "description": "Create a new workflow", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "parameters": []}, "/agents/workflows/runs/{run_id}/": {"get": {"operationId": "agents_workflows_runs_read", "description": "Get details of a workflow run or list all runs for a workflow", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_workflows_runs_create", "description": "Start a new workflow run or perform actions on an existing run", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_workflows_runs_delete", "description": "Delete a workflow run", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "run_id", "in": "path", "required": true, "type": "string"}]}, "/agents/workflows/{workflow_id}/": {"get": {"operationId": "agents_workflows_read", "description": "Get a specific workflow", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "put": {"operationId": "agents_workflows_update", "description": "Update a workflow", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_workflows_delete", "description": "Delete a workflow", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}]}, "/agents/workflows/{workflow_id}/run/": {"get": {"operationId": "agents_workflows_run_list", "description": "Get details of a workflow run or list all runs for a workflow", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["agents"]}, "post": {"operationId": "agents_workflows_run_create", "description": "Start a new workflow run or perform actions on an existing run", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["agents"]}, "delete": {"operationId": "agents_workflows_run_delete", "description": "Delete a workflow run", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["agents"]}, "parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}]}, "/analytics/agents/{agent_id}/": {"get": {"operationId": "analytics_agents_read", "description": "Get agent analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/analytics/custom/": {"post": {"operationId": "analytics_custom_create", "description": "Get custom analytics data", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["analytics"]}, "parameters": []}, "/analytics/dashboard/": {"get": {"operationId": "analytics_dashboard_list", "description": "Get dashboard analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": []}, "/analytics/executions/": {"get": {"operationId": "analytics_executions_list", "description": "Get execution analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": []}, "/analytics/performance/": {"get": {"operationId": "analytics_performance_list", "description": "Get performance analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": []}, "/analytics/projects/{project_id}/": {"get": {"operationId": "analytics_projects_read", "description": "Get project analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/analytics/usage/": {"get": {"operationId": "analytics_usage_list", "description": "Get usage analytics data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["analytics"]}, "parameters": []}, "/auth/login": {"post": {"operationId": "auth_login_create", "description": "API endpoint for user login.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/logout": {"post": {"operationId": "auth_logout_create", "description": "API endpoint for user logout.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/mfa/challenge": {"post": {"operationId": "auth_mfa_challenge_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/mfa/disable": {"post": {"operationId": "auth_mfa_disable_create", "description": "API endpoint to disable MFA.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/mfa/setup": {"post": {"operationId": "auth_mfa_setup_create", "description": "API endpoint to set up Multi-Factor Authentication.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/mfa/verify": {"post": {"operationId": "auth_mfa_verify_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/password-reset": {"post": {"operationId": "auth_password-reset_create", "description": "API endpoint to request a password reset.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/password-reset/confirm": {"post": {"operationId": "auth_password-reset_confirm_create", "description": "API endpoint to confirm a password reset.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/profile/": {"get": {"operationId": "auth_profile_list", "description": "Get the current user's profile.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "put": {"operationId": "auth_profile_update", "description": "Update the current user's profile.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/refresh-token": {"post": {"operationId": "auth_refresh-token_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/register": {"post": {"operationId": "auth_register_create", "description": "API endpoint for user registration.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/billing/invoices/": {"get": {"operationId": "billing_invoices_list", "description": "Get invoices", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/billing/payment-methods/": {"get": {"operationId": "billing_payment-methods_list", "description": "Get payment methods", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "post": {"operationId": "billing_payment-methods_create", "description": "Add a payment method", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/billing/plans/": {"get": {"operationId": "billing_plans_list", "description": "Get available billing plans", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/billing/projects/{project_id}/": {"get": {"operationId": "billing_projects_read", "description": "Get billing information for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "put": {"operationId": "billing_projects_update", "description": "Update billing settings for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/billing/subscription/": {"get": {"operationId": "billing_subscription_list", "description": "Get current subscription", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "put": {"operationId": "billing_subscription_update", "description": "Update subscription", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/billing/usage/": {"get": {"operationId": "billing_usage_list", "description": "Get usage data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/billing/user/": {"get": {"operationId": "billing_user_list", "description": "Get billing information for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "put": {"operationId": "billing_user_update", "description": "Update billing information for the current user", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["billing"]}, "parameters": []}, "/environments/": {"get": {"operationId": "environments_list", "description": "List all environments", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["environments"]}, "post": {"operationId": "environments_create", "description": "Create a new environment", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["environments"]}, "parameters": []}, "/environments/{environment_id}": {"get": {"operationId": "environments_read", "description": "Get a specific environment", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["environments"]}, "put": {"operationId": "environments_update", "description": "Update an environment", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["environments"]}, "delete": {"operationId": "environments_delete", "description": "Delete an environment", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["environments"]}, "parameters": [{"name": "environment_id", "in": "path", "required": true, "type": "string"}]}, "/export/agents/import": {"post": {"operationId": "export_agents_import_create", "description": "API endpoint for importing an agent.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["export"]}, "parameters": []}, "/export/agents/{agent_id}/export": {"get": {"operationId": "export_agents_export_list", "description": "API endpoint for exporting an agent.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["export"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/export/backup": {"get": {"operationId": "export_backup_list", "description": "API endpoint for creating a system backup.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["export"]}, "parameters": []}, "/export/projects/import": {"post": {"operationId": "export_projects_import_create", "description": "API endpoint for importing a project.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["export"]}, "parameters": []}, "/export/projects/{project_id}/export": {"get": {"operationId": "export_projects_export_list", "description": "API endpoint for exporting a project.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["export"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/export/restore": {"post": {"operationId": "export_restore_create", "description": "API endpoint for restoring from a system backup.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["export"]}, "parameters": []}, "/fine-tuning/base-models/": {"get": {"operationId": "fine-tuning_base-models_list", "description": "Get all base models", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": []}, "/fine-tuning/datasets/": {"get": {"operationId": "fine-tuning_datasets_list", "description": "List all datasets with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "post": {"operationId": "fine-tuning_datasets_create", "description": "Create a new dataset", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": []}, "/fine-tuning/datasets/{dataset_id}/": {"get": {"operationId": "fine-tuning_datasets_read", "description": "Get a specific dataset", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "put": {"operationId": "fine-tuning_datasets_update", "description": "Update a dataset", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "delete": {"operationId": "fine-tuning_datasets_delete", "description": "Delete a dataset", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "dataset_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/datasets/{dataset_id}/samples/": {"get": {"operationId": "fine-tuning_datasets_samples_list", "description": "List samples in a dataset", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "post": {"operationId": "fine-tuning_datasets_samples_create", "description": "Add a sample to a dataset", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "dataset_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/datasets/{dataset_id}/upload/": {"post": {"operationId": "fine-tuning_datasets_upload_create", "description": "Upload data files", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["fine-tuning"]}, "parameters": [{"name": "dataset_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/jobs/": {"get": {"operationId": "fine-tuning_jobs_list", "description": "List all fine-tuning jobs with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "post": {"operationId": "fine-tuning_jobs_create", "description": "Create a new fine-tuning job", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": []}, "/fine-tuning/jobs/{job_id}/": {"get": {"operationId": "fine-tuning_jobs_read", "description": "Get a specific fine-tuning job", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "delete": {"operationId": "fine-tuning_jobs_delete", "description": "Cancel a fine-tuning job", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/models/": {"get": {"operationId": "fine-tuning_models_list", "description": "List all fine-tuned models with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "post": {"operationId": "fine-tuning_models_create", "description": "Create a new fine-tuned model", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": []}, "/fine-tuning/models/{model_id}/": {"get": {"operationId": "fine-tuning_models_read", "description": "Get a specific fine-tuned model", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "put": {"operationId": "fine-tuning_models_update", "description": "Update a fine-tuned model", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "delete": {"operationId": "fine-tuning_models_delete", "description": "Delete a fine-tuned model", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "model_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/models/{model_id}/evaluate/": {"post": {"operationId": "fine-tuning_models_evaluate_create", "description": "Evaluate a model", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "model_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/projects/{project_id}/datasets/": {"get": {"operationId": "fine-tuning_projects_datasets_list", "description": "Get datasets for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/fine-tuning/projects/{project_id}/models/": {"get": {"operationId": "fine-tuning_projects_models_list", "description": "Get models for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["fine-tuning"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/": {"get": {"operationId": "knowledge_list", "description": "List all knowledge bases with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "post": {"operationId": "knowledge_create", "description": "Create a new knowledge base", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["knowledge"]}, "parameters": []}, "/knowledge/projects/{project_id}/": {"get": {"operationId": "knowledge_projects_read", "description": "Get knowledge bases for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/{kb_id}/": {"get": {"operationId": "knowledge_read", "description": "Get a specific knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "put": {"operationId": "knowledge_update", "description": "Update a knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "delete": {"operationId": "knowledge_delete", "description": "Delete a knowledge base", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["knowledge"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/{kb_id}/documents/": {"get": {"operationId": "knowledge_documents_list", "description": "List documents in a knowledge base", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "post": {"operationId": "knowledge_documents_create", "description": "Add a document to a knowledge base", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["knowledge"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/{kb_id}/documents/{document_id}/": {"get": {"operationId": "knowledge_documents_read", "description": "Get a specific document", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "put": {"operationId": "knowledge_documents_update", "description": "Update a document", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["knowledge"]}, "delete": {"operationId": "knowledge_documents_delete", "description": "Delete a document", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["knowledge"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}, {"name": "document_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/{kb_id}/search/": {"post": {"operationId": "knowledge_search_create", "description": "Search documents", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["knowledge"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/knowledge/{kb_id}/upload/": {"post": {"operationId": "knowledge_upload_create", "description": "Upload document files", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["knowledge"]}, "parameters": [{"name": "kb_id", "in": "path", "required": true, "type": "string"}]}, "/monitoring/alerts/": {"get": {"operationId": "monitoring_alerts_list", "description": "Get list of system alerts", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": []}, "/monitoring/alerts/{alert_id}/": {"get": {"operationId": "monitoring_alerts_read", "description": "Get details of a specific alert", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": [{"name": "alert_id", "in": "path", "required": true, "type": "string"}]}, "/monitoring/health/": {"get": {"operationId": "monitoring_health_list", "description": "Check if the system is healthy", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": []}, "/monitoring/logs/": {"get": {"operationId": "monitoring_logs_list", "description": "Get system logs with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": []}, "/monitoring/metrics/performance/": {"get": {"operationId": "monitoring_metrics_performance_list", "description": "Get performance metrics including response times and throughput", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": []}, "/monitoring/metrics/system/": {"get": {"operationId": "monitoring_metrics_system_list", "description": "Get system metrics including CPU, memory, and disk usage", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["monitoring"]}, "parameters": []}, "/projects/": {"get": {"operationId": "projects_list", "description": "List projects with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_create", "description": "Create a new project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": []}, "/projects/default/": {"get": {"operationId": "projects_default_list", "description": "Get the default project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "parameters": []}, "/projects/{project_id}/": {"get": {"operationId": "projects_read", "description": "Get a specific project by ID", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "put": {"operationId": "projects_update", "description": "Update an existing project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "delete": {"operationId": "projects_delete", "description": "Delete a project", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/agents": {"get": {"operationId": "projects_agents_list", "description": "Get all agents for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_agents_create", "description": "Create a new agent for a project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/billing": {"get": {"operationId": "projects_billing_list", "description": "Get billing information for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "put": {"operationId": "projects_billing_update", "description": "Update billing settings for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/members/": {"get": {"operationId": "projects_members_list", "description": "List all members for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_members_create", "description": "Add a member to a project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/members/{user_id}/": {"put": {"operationId": "projects_members_update", "description": "Update project member role", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "delete": {"operationId": "projects_members_delete", "description": "Remove a member from a project", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}, {"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/memory": {"get": {"operationId": "projects_memory_list", "description": "List all memories for a specific project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_memory_create", "description": "Create a new memory for a specific project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/security/audit-logs/": {"get": {"operationId": "projects_security_audit-logs_list", "description": "Get audit logs for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/security/policies/": {"get": {"operationId": "projects_security_policies_list", "description": "List security policies for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_security_policies_create", "description": "Create a new security policy for a project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/security/policies/{policy_id}/": {"put": {"operationId": "projects_security_policies_update", "description": "Update a security policy for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "delete": {"operationId": "projects_security_policies_delete", "description": "Delete a security policy for a project", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}, {"name": "policy_id", "in": "path", "required": true, "type": "string"}]}, "/projects/{project_id}/workflows": {"get": {"operationId": "projects_workflows_list", "description": "List workflows for a specific project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["projects"]}, "post": {"operationId": "projects_workflows_create", "description": "Create a new workflow for a specific project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/prompts/": {"get": {"operationId": "prompts_list", "description": "List all prompts", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "post": {"operationId": "prompts_create", "description": "Create a new prompt", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["prompts"]}, "parameters": []}, "/prompts/projects/{project_id}/": {"get": {"operationId": "prompts_projects_read", "description": "List prompts for a specific project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "post": {"operationId": "prompts_projects_create", "description": "Create a new prompt for a specific project", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["prompts"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/prompts/templates/": {"get": {"operationId": "prompts_templates_list", "description": "Get all prompt templates", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "parameters": []}, "/prompts/{prompt_id}/": {"get": {"operationId": "prompts_read", "description": "Get a specific prompt", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "put": {"operationId": "prompts_update", "description": "Update a prompt", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "delete": {"operationId": "prompts_delete", "description": "Delete a prompt", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["prompts"]}, "parameters": [{"name": "prompt_id", "in": "path", "required": true, "type": "string"}]}, "/prompts/{prompt_id}/test/": {"post": {"operationId": "prompts_test_create", "description": "Test a prompt", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["prompts"]}, "parameters": [{"name": "prompt_id", "in": "path", "required": true, "type": "string"}]}, "/prompts/{prompt_id}/versions/": {"get": {"operationId": "prompts_versions_list", "description": "Get all versions of a prompt", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["prompts"]}, "parameters": [{"name": "prompt_id", "in": "path", "required": true, "type": "string"}]}, "/security/audit-logs/": {"get": {"operationId": "security_audit-logs_list", "description": "Get audit logs with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["security"]}, "parameters": []}, "/security/policies/": {"get": {"operationId": "security_policies_list", "description": "Get list of security policies", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["security"]}, "post": {"operationId": "security_policies_create", "description": "Create a new security policy", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["security"]}, "parameters": []}, "/security/policies/{policy_id}/": {"put": {"operationId": "security_policies_update", "description": "Update a security policy", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["security"]}, "delete": {"operationId": "security_policies_delete", "description": "Delete a security policy", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["security"]}, "parameters": [{"name": "policy_id", "in": "path", "required": true, "type": "string"}]}, "/security/scan/": {"post": {"operationId": "security_scan_create", "description": "Initiate a security scan", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["security"]}, "parameters": []}, "/security/scan/results/": {"get": {"operationId": "security_scan_results_list", "description": "Get security scan results", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["security"]}, "parameters": []}, "/testing/ab-tests/": {"get": {"operationId": "testing_ab-tests_list", "description": "List all A/B tests with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "post": {"operationId": "testing_ab-tests_create", "description": "Create a new A/B test", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["testing"]}, "parameters": []}, "/testing/ab-tests/{ab_test_id}/": {"get": {"operationId": "testing_ab-tests_read", "description": "Get a specific A/B test", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "put": {"operationId": "testing_ab-tests_update", "description": "Update an A/B test", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "delete": {"operationId": "testing_ab-tests_delete", "description": "Delete an A/B test", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "ab_test_id", "in": "path", "required": true, "type": "string"}]}, "/testing/ab-tests/{ab_test_id}/results/": {"get": {"operationId": "testing_ab-tests_results_list", "description": "Get A/B test results", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "ab_test_id", "in": "path", "required": true, "type": "string"}]}, "/testing/agents/{agent_id}/test-cases/": {"get": {"operationId": "testing_agents_test-cases_list", "description": "Get test cases for an agent", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "agent_id", "in": "path", "required": true, "type": "string"}]}, "/testing/projects/{project_id}/test-cases/": {"get": {"operationId": "testing_projects_test-cases_list", "description": "Get test cases for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/testing/regression-tests/": {"get": {"operationId": "testing_regression-tests_list", "description": "List all regression tests with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "post": {"operationId": "testing_regression-tests_create", "description": "Create a new regression test", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["testing"]}, "parameters": []}, "/testing/regression-tests/{regression_test_id}/": {"get": {"operationId": "testing_regression-tests_read", "description": "Get a specific regression test", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "put": {"operationId": "testing_regression-tests_update", "description": "Update a regression test", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "delete": {"operationId": "testing_regression-tests_delete", "description": "Delete a regression test", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "regression_test_id", "in": "path", "required": true, "type": "string"}]}, "/testing/regression-tests/{regression_test_id}/run/": {"post": {"operationId": "testing_regression-tests_run_create", "description": "Run a regression test", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "regression_test_id", "in": "path", "required": true, "type": "string"}]}, "/testing/test-cases/": {"get": {"operationId": "testing_test-cases_list", "description": "List all test cases with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "post": {"operationId": "testing_test-cases_create", "description": "Create a new test case", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["testing"]}, "parameters": []}, "/testing/test-cases/{test_case_id}/": {"get": {"operationId": "testing_test-cases_read", "description": "Get a specific test case", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "put": {"operationId": "testing_test-cases_update", "description": "Update a test case", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "delete": {"operationId": "testing_test-cases_delete", "description": "Delete a test case", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "test_case_id", "in": "path", "required": true, "type": "string"}]}, "/testing/test-cases/{test_case_id}/run/": {"post": {"operationId": "testing_test-cases_run_create", "description": "Run a test case", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "test_case_id", "in": "path", "required": true, "type": "string"}]}, "/testing/test-runs/": {"get": {"operationId": "testing_test-runs_list", "description": "List all test runs with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "parameters": []}, "/testing/test-runs/{test_run_id}/": {"get": {"operationId": "testing_test-runs_read", "description": "Get a specific test run", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["testing"]}, "parameters": [{"name": "test_run_id", "in": "path", "required": true, "type": "string"}]}, "/tools/": {"get": {"operationId": "tools_list", "description": "List all tools with optional filtering", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tools"]}, "post": {"operationId": "tools_create", "description": "Create a new tool", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tools"]}, "parameters": []}, "/tools/categories/": {"get": {"operationId": "tools_categories_list", "description": "Get all tool categories", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tools"]}, "parameters": []}, "/tools/projects/{project_id}/": {"get": {"operationId": "tools_projects_read", "description": "Get tools for a project", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tools"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/tools/{tool_id}/": {"get": {"operationId": "tools_read", "description": "Get a specific tool", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tools"]}, "put": {"operationId": "tools_update", "description": "Update a tool", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tools"]}, "delete": {"operationId": "tools_delete", "description": "Delete a tool", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["tools"]}, "parameters": [{"name": "tool_id", "in": "path", "required": true, "type": "string"}]}, "/tools/{tool_id}/execute/": {"post": {"operationId": "tools_execute_create", "description": "Execute a tool", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tools"]}, "parameters": [{"name": "tool_id", "in": "path", "required": true, "type": "string"}]}, "/users/": {"get": {"operationId": "users_list", "description": "List all users. Admin access only.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "post": {"operationId": "users_create", "description": "Create a new user. Admin access only.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["users"]}, "parameters": []}, "/users/profile": {"get": {"operationId": "users_profile_list", "description": "Get the current user's profile.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "put": {"operationId": "users_profile_update", "description": "Update the current user's profile.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "parameters": []}, "/users/{user_id}": {"get": {"operationId": "users_read", "description": "Get details for a specific user. Admin access only.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "put": {"operationId": "users_update", "description": "Update a specific user. Admin access only.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "delete": {"operationId": "users_delete", "description": "Delete a specific user. Admin access only.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/users/{user_id}/password": {"put": {"operationId": "users_password_update", "description": "Update a user's password", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/users/{user_id}/projects": {"get": {"operationId": "users_projects_list", "description": "List all projects for a specific user. Admin access only.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/webhooks/": {"get": {"operationId": "webhooks_list", "description": "API endpoint for listing and creating webhooks.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "post": {"operationId": "webhooks_create", "description": "API endpoint for listing and creating webhooks.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["webhooks"]}, "parameters": []}, "/webhooks/event-types": {"get": {"operationId": "webhooks_event-types_list", "description": "API endpoint for retrieving available webhook event types.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "parameters": []}, "/webhooks/{webhook_id}": {"get": {"operationId": "webhooks_read", "description": "API endpoint for retrieving, updating, and deleting a webhook.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "put": {"operationId": "webhooks_update", "description": "API endpoint for retrieving, updating, and deleting a webhook.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "delete": {"operationId": "webhooks_delete", "description": "API endpoint for retrieving, updating, and deleting a webhook.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["webhooks"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}, "/webhooks/{webhook_id}/logs": {"get": {"operationId": "webhooks_logs_list", "description": "API endpoint for retrieving webhook delivery logs.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}, "/webhooks/{webhook_id}/test": {"post": {"operationId": "webhooks_test_create", "description": "API endpoint for testing a webhook.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["webhooks"]}, "parameters": [{"name": "webhook_id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {}}